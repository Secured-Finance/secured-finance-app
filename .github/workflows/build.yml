name: Build Web App and Storybook
on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
      environment_name:
        required: true
        type: string
      ref:
        description: 'The branch or tag ref to checkout. Default is the branch that triggered the workflow.'
        default: ''
        required: false
        type: string
    secrets:
      PAT:
        required: true
      CODECOV_TOKEN:
        required: true
      CHROMATIC_PROJECT_TOKEN:
        required: true
      ALCHEMY_API_KEY:
        required: true
      AMPLITUDE_API_KEY:
        required: true
      SQUID_WIDGET_INTEGRATOR_ID:
        required: true

jobs:
  build-and-test-all:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: Use Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci
        env:
          NPM_AUTH_TOKEN: ${{ secrets.PAT }}

      - run: |
          cat <<'EOF' > .env.local
          NEXT_PUBLIC_ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}
          NEXT_PUBLIC_AMPLITUDE_API_KEY=${{ secrets.AMPLITUDE_API_KEY }}
          NEXT_PUBLIC_SQUID_WIDGET_INTEGRATOR_ID=${{ secrets.SQUID_WIDGET_INTEGRATOR_ID }}
          SF_ENV=${{ vars.SF_ENV }}
          NEXT_PUBLIC_USE_PACKAGE_VERSION=${{ vars.USE_PACKAGE_VERSION }}
          NEXT_PUBLIC_SUPPORTED_CHAIN_IDS=${{ vars.SUPPORTED_CHAIN_IDS }}
          NEXT_PUBLIC_NON_SUBGRAPH_SUPPORTED_CHAIN_IDS=${{ vars.NON_SUBGRAPH_SUPPORTED_CHAIN_IDS }}
          NEXT_PUBLIC_GRAPHQL_SERVER_URL=${{ vars.GRAPHQL_SERVER_URL }}
          NEXT_PUBLIC_REFERRAL_MESSAGE="${{ vars.REFERRAL_MESSAGE }}"
          NEXT_PUBLIC_SUBGRAPH_URL_314=${{ vars.SUBGRAPH_URL_314 }}
          NEXT_PUBLIC_STABLECOIN_APP_URL=${{ vars.STABLECOIN_APP_URL }}
          NEXT_PUBLIC_SHOW_STABLECOIN_APP_URL=${{ vars.SHOW_STABLECOIN_APP_URL }}
          NEXT_PUBLIC_GOOGLE_ANALYTICS_TAG=${{ vars.GOOGLE_ANALYTICS_TAG }}
          EOF

      - name: Check Syntax with Prettier
        run: npm run prettier:check

      - name: Check Style with ESLint
        run: npm run lint:check

      - name: Run Tests
        run: npm run test:cov

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          files: './coverage/coverage-final.json'

      - name: Build Web App
        run: npm run build

      - name: Build Storybook
        uses: chromaui/action@v11
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitOnceUploaded: true
          skip: "main"

      - name: Publish Web App
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: build
          retention-days: 10
          if-no-files-found: error
